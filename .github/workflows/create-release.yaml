name: Create a new release
on: 
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repo name to be released'
        required: true
      release:
        description: 'Release version'
        required: true
jobs:
  create-release:
    name: Deploy staging environment
    runs-on: ubuntu-20.04
    steps:
      - id: checkout-repo
        name: ${{ format('Checking out {0} repo', github.event.inputs.repo) }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: ${{ format('biomage-ltd/{0}', github.event.inputs.repo ) }}
          ref: develop
          token: ${{ secrets.API_TOKEN_GITHUB }}


      - id: disable-admin-enforcement
        name: Temporarily disable admin enforcement
        uses: benjefferies/branch-protection-bot@master
        with:
          access-token: ${{ secrets.API_TOKEN_GITHUB }}
          owner: biomage-ltd
          repo: ${{ github.event.inputs.repo }}
          enforce_admins: false
          retries: 8

      - id: create-release
        name: Create the new release.
        run: |-

            git checkout ${RELEASE_BRANCH}
            git checkout develop 

            # We check for differences because ${RELEASE_BRANCH} and develop are in different commits (due to merge) so git log is never empty.
            if [ "$(git diff ${RELEASE_BRANCH}..develop)" = "" ]; then
              echo " * No changes detected between ${RELEASE_BRANCH} and develop."
            else
              echo " * Found changes between ${RELEASE_BRANCH} and develop. Commits found: "
              echo "$(git log --pretty=format:%s ${RELEASE_BRANCH}..develop | xargs -I % sh -c 'echo "\t- %";' )"
              echo ""
            fi

            git config user.name "Github Actions"

            echo "==> Creating ${RELASE} from $(git branch --show-current) branch"
            git config --local "gitflow.branch.release/${RELEASE}.base" develop
            git checkout -b "release/${RELEASE}" develop
 
            git checkout ${RELEASE_BRANCH}
            git merge --no-edit --no-ff "release/${RELEASE}"
            git checkout ${RELEASE_BRANCH}
            git tag -a "${RELEASE}" -m '' -f

            git checkout develop
            git merge --no-edit --no-ff "${RELEASE}"

        env:
          RELEASE: ${{ github.event.inputs.release }}
          RELEASE_BRANCH: master
          REPO: ${{ github.event.inputs.repo }}
      
      - id: push-to-mster
        name: Push new release into master
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ format('biomage-ltd/{0}', github.event.inputs.repo ) }}
          github_token: ${{ secrets.API_TOKEN_GITHUB }}
          branch: master
          tags: true
          force: true

      - id: push-to-develop
        name: Push new release into develop
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ format('biomage-ltd/{0}', github.event.inputs.repo ) }}
          github_token: ${{ secrets.API_TOKEN_GITHUB }}
          branch: develop
          tags: true
          force: true

      - id: enable-admin-enforcement
        name: Re-enable admin enforcement
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access-token: ${{ secrets.API_TOKEN_GITHUB }}
          owner: biomage-ltd
          repo: ${{ github.event.inputs.repo }}
          enforce_admins: true
          retries: 8
