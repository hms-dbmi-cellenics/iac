AWSTemplateFormatVersion: "2010-09-09"
Description: Set up S3 buckets for Cellenics [managed by github.com/hms-dbmi-cellenics/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the buckets need to be created.

Resources:
  PlotsTablesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "plots-tables-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          # Non-current versions are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
  PlotsTablesBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref PlotsTablesBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${PlotsTablesBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  CellSetsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "cell-sets-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          # Non-current versions are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
  CellSetsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CellSetsBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${CellSetsBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  WorkerResultsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "worker-results-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteDifferentialExpressionResults
            Status: "Enabled"
            TagFilters:
              - Key: requestType
                Value: DifferentialExpression
            ExpirationInDays: 2
          - Id: DeleteOldWorkResults
            Status: "Enabled"
            ExpirationInDays: 14
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
              - "x-amz-server-side-encryption"
              - "x-amz-request-id"
              - "x-amz-id-2"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
            Id: uiHeadersRule
  WorkerResultsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref WorkerResultsBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${WorkerResultsBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  PipelineResultBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "processed-matrix-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          # Non-current versions are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
  PipelineResultBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref PipelineResultBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${PipelineResultBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  # Stores, for each experiment and timestamp, the log and dump files for errors from the pipeline
  # Indexed by experimentId and timestamp
  PipelineDebugBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "biomage-pipeline-debug-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteObjectAfter10Days
            Status: Enabled
            ExpirationInDays: 10
  PipelineDebugBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref PipelineDebugBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${PipelineDebugBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  # The bucket that contains the count matrix files (in .rds format) used for the experiments.
  SourceBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "biomage-source-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          # Non-current versions of count matrices are stored in normal S3 for
          # 5 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 5
  SourceBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref SourceBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${SourceBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  # Stores, for each experiment, the cellIds that were preserved after each filter step of the latest qc run
  # Indexed by experimentId
  FilteredCellsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "biomage-filtered-cells-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          # Non-current versions are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
  FilteredCellsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref FilteredCellsBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${FilteredCellsBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  BackupsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "biomage-backups-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          # Non-current versions of source files are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
          - Id: BackupRetentionDays
            Status: "Enabled"
            ExpirationInDays: 90
  BackupsBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref BackupsBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${BackupsBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'
  # The bucket that contains the unfiltered versions of the count matrix files as uploaded by the user.
  OriginalFilesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "biomage-originals-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          # Non-current versions of source files are stored in normal S3 for
          # 5 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 5
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            ExposedHeaders:
              - ETag
              - "x-amz-server-side-encryption"
              - "x-amz-request-id"
              - "x-amz-id-2"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
            Id: uiHeadersRule
  OriginalFilesBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref OriginalFilesBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${OriginalFilesBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  CellLevelMetadataBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "cellenics-cell-level-metadata-${Environment}-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          # Non-current versions of source files are stored in normal S3 for
          # 7 days and are then deleted.
          - Id: PreserveThenDeleteNonCurrentVersion
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 7
  CellLevelMetadataBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CellLevelMetadataBucket
      PolicyDocument:
        Id: SslOnlyAccess
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSSLRequestsOnly
            Action:
              - 's3:*'
            Effect: Deny
            Resource:
              - !Sub 'arn:aws:s3:::${CellLevelMetadataBucket}/*'
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'