AWSTemplateFormatVersion: "2010-09-09"
Description: Set up case insensitive Cognito resources for Cellenics [managed by github.com/hms-dbmi-cellenics/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the buckets need to be created.

Outputs:
  UserPoolId:
    Value: !Ref UserPool
    Export:
      Name: !Sub 'biomage-user-pool-case-insensitive-${Environment}::UserPoolId'
  UserPoolProviderName:
    Description: Address to use to connect to Primary Cluster endpoint
    Value: !GetAtt UserPool.ProviderName
    Export:
      Name: !Sub 'biomage-user-pool-case-insensitive-${Environment}::UserPoolProviderName'

Resources:
  SMSRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "biomage-user-pool-case-insensitive-sms-role-${Environment}"
      AssumeRolePolicyDocument: |-
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "cognito-idp.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "92bd350f-b2ad-455a-b614-a24e63555edb"
                }
              }
            }
          ]
        }
      Path: /
      Policies:
        - PolicyName: "can-send-sms"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:publish"
                Resource:
                  - '*'

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "biomage-user-pool-case-insensitive-${Environment}"
      DeletionProtection: ACTIVE
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
          - Name: verified_phone_number
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        InviteMessageTemplate:
          EmailSubject: 'Your temporary password for Cellenics'
          EmailMessage: 'Thank you for signing up to Cellenics. Your username is {username} and temporary password is {####}.'
          SMSMessage: 'Your Cellenics username is {username} and temporary password is {####}.'
      AutoVerifiedAttributes:
        - email
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: true
        DeviceOnlyRememberedOnUserPrompt: true
      EmailConfiguration:
        # AWS automatically sets the From field to no-reply@verificationemail.com if we use COGNITO_DEFAULT
        # To customize the From field, we have to provide the ARN of an SES account
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-emailconfiguration.html
        EmailSendingAccount: COGNITO_DEFAULT
        ReplyToEmailAddress: "alex_pickering@hms.harvard.edu"
      EnabledMfas:
        - SMS_MFA
        - SOFTWARE_TOKEN_MFA
      SmsConfiguration:
        ExternalId: '92bd350f-b2ad-455a-b614-a24e63555edb'
        SnsCallerArn: !GetAtt SMSRole.Arn
      MfaConfiguration: "OPTIONAL"
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: institution
          AttributeDataType: String
          Mutable: true
          Required: false
          # Agreed to privacy policy (soft required)
        - Name: agreed_terms
          Required: false
          Mutable: true
          AttributeDataType: String
          # Agreed to receiving emails (Not required, default is false)
        - Name: agreed_emails
          Required: false
          Mutable: true
          AttributeDataType: String
      SmsAuthenticationMessage: 'Your authentication code for Cellenics is {####}.'
      SmsVerificationMessage: 'Your verification code for Cellenics is {####}.'
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      LambdaConfig:
        PostConfirmation:
          Fn::ImportValue: !Sub PostRegisterLambdaArn-${Environment}
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: !Sub "hms-auth-${Environment}-${AWS::AccountId}"
