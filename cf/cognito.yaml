AWSTemplateFormatVersion: "2010-09-09"
Description: Set up Cognito resources for Biomage SCP [managed by github.com/biomage-ltd/iac]

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: The environment for which the buckets need to be created.

Resources:
  FileUploadIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Sub "file-upload-identity-pool-${Environment}"
      AllowUnauthenticatedIdentities: false

  UIRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "ui-auth-user-role-${Environment}"
      Path: /
      Policies:
        - PolicyName: !Sub "can-upload-object-to-destination-bucket-${Environment}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:ListMultipartUploadParts"
                  - "s3:AbortMultipartUpload"
                  - "s3:ListBucketMultipartUploads"
                Resource:
                  - !Sub "arn:aws:s3:::biomage-source-${Environment}/*"

        - PolicyName: !Sub "can-get-object-information-in-bucket-${Environment}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectTagging"
                Resource:
                  - !Sub "arn:aws:s3:::biomage-source-${Environment}/*"

        - PolicyName: !Sub "can-list-objects-in-bucket-${Environment}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::biomage-source-${Environment}"

  # TODO: this will have to be refactored once authentication is done.
  # this will have to work with attribute-based access control or role-based
  # access control so we can limit the user to only upload to certain folders
  # on S3 depending on their instutiton/name/etc.
  #
  # see https://docs.aws.amazon.com/cognito/latest/developerguide/attributes-for-access-control.html
  # and https://docs.aws.amazon.com/cognito/latest/developerguide/role-based-access-control.html
  FileUploadIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref FileUploadIdentityPool
      Roles:
        "authenticated": !GetAtt UIRole.Arn